body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  margin: 0;
  padding: 20px;
  background-color: #282c34; /* Dark background like your Gradio app */
  color: #abb2bf; /* Light grey text */
}

.app-container {
  max-width: 800px; /* A bit wider */
  margin: auto;
  background-color: #353941; /* Slightly lighter dark for container */
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
}

h1 {
  color: #61dafb; /* React blue for the title */
  text-align: center;
  margin-bottom: 30px;
}

.prompt-section {
  margin-bottom: 20px;
}

.prompt-section label {
  display: block;
  margin-bottom: 8px;
  font-weight: bold;
  color: #98c379; /* A greenish color for labels */
}

.prompt-section textarea {
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  border: 1px solid #4f5666;
  border-radius: 4px;
  background-color: #2c313a;
  color: #abb2bf;
  font-size: 1rem;
  min-height: 80px; /* Ensure a decent minimum height */
}

.prompt-section textarea:focus {
  outline: none;
  border-color: #61dafb;
  box-shadow: 0 0 0 2px rgba(97, 218, 251, 0.3);
}

.submit-button {
  display: block; /* Make button take full width available in its container */
  width: 100%;   /* Or set a specific width like '200px' and use margin: auto to center */
  padding: 12px 20px;
  background-color: #61dafb; /* React blue */
  color: #20232a;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s ease;
  margin-top: 20px;
}

.submit-button:hover {
  background-color: #52b6d9;
}

/* Basic mobile responsiveness */
@media (max-width: 600px) {
  body {
    padding: 10px;
  }
  .app-container {
    padding: 15px;
  }
  h1 {
    font-size: 1.5rem;
  }
}

/* Add to src/App.css */
/* ... (all existing styles) ... */

.input-row {
  display: flex;
  flex-wrap: wrap;
  gap: 15px; /* Increased gap a bit for better spacing */
  margin-bottom: 20px;
  align-items: flex-start; /* Align items to the top */
}

.input-row .input-group {
  /* flex: 1 1 200px; flex-grow: 1, flex-shrink: 1, flex-basis: 200px */
  /* min-width is handled by flex-basis now */
  /* margin-bottom: 0; */
  flex: 1 1 22%; /* Grow, Shrink, Basis of ~1/4 width */
  min-width: 150px; /* Prevent them from becoming too small before wrapping */
  display: flex; /* Make the input-group itself a flex container */
  flex-direction: column; /* Stack label and select/textarea vertically */
}

/* Specific styling for the action group to control its size better */
/* .input-row .action-group { */
  /* flex-grow: 0.5;  */
  /* flex-basis: 18%; // Example: make it slightly smaller */
  /* Make it grow less than other full dropdowns */
  /* Or you can give it a more fixed width if preferred: */
  /* flex: 0 0 250px; /* No grow, no shrink, basis of 250px */
/* } */


.checkbox-group {
  display: flex;
  align-items: center;
  margin-bottom: 5px;
}

.checkbox-group input[type="checkbox"] {
  margin-right: 8px;
  width: 16px;
  height: 16px;
  flex-shrink: 0; /* Prevent checkbox from shrinking */
}

.checkbox-group label {
  margin-bottom: 0;
  font-weight: normal;
  color: #abb2bf;
  white-space: nowrap; /* Prevent label from wrapping */
}

.action-group .action-dropdown-label {
  display: block;
  margin-bottom: 8px;
  font-weight: bold;
  color: #98c379;
  margin-top: 5px;
}

/* Ensure select within action group also takes full width of its container */
.action-group select {
    width: 100%;
}

/* Ensure select/textarea within input-group take full width of their container */
.input-group select,
.input-group textarea { /* Also apply to textarea if you put them in input-groups */
    width: 100%;
    /* Other styles like padding, border, etc., remain the same */
}

.seed-range-labels {
  display: flex;
  justify-content: space-between;
  font-size: 0.8em;
  color: #888;
  margin-top: 2px;
  width: 100%;
}

.seed-range-labels span { /* Apply to all spans initially */
  white-space: nowrap; /* Prevent wrapping */
}

.seed-range-labels span:first-child {
  text-align: left;
}

.seed-range-labels span:nth-child(2) {
  text-align: center;
  flex-grow: 1;
  color: #abb2bf;
  overflow: hidden;      /* Hide overflow */
  text-overflow: ellipsis; /* Show ... if text is too long */
  padding: 0 5px; /* Give it a little breathing room */
}

.seed-range-labels span:last-child {
  text-align: right;
}


.input-group.description-group textarea {
  background-color: #2c313a; /* Match other inputs */
  color: #abb2bf; /* Match other input text */
  border: 1px solid #4f5666;
  border-radius: 4px;
  padding: 10px;
  width: 100%;
  box-sizing: border-box;
  resize: vertical; /* Allow vertical resize, or none if you prefer fixed */
  font-family: inherit; /* Inherit font from body/app */
  font-size: 0.9em; /* Slightly smaller if desired */
  min-height: 60px; /* Adjust as needed */
}

.input-group.description-group label {
    /* Styles for description labels are inherited from .input-group label,
       which is fine. Add specific overrides if needed. */
}

/* Ensure the input groups for dropdown and its description take appropriate space */
/* If you want the dropdown and its description to each take up half the row: */
.input-row > .input-group:has(select) { /* Targets input-group containing a select */
    flex-basis: 48%; /* Adjust percentage to account for gap */
}
.input-row > .input-group.description-group {
    flex-basis: 48%; /* Adjust percentage to account for gap */
}

/* If you want the dropdown to be smaller and description larger, adjust flex-basis: */
/*
.input-row > .input-group:has(select[id="sampler-list"]),
.input-row > .input-group:has(select[id="scheduler-list"]) {
    flex-basis: 30%;
}
.input-row > .input-group.description-group {
    flex-basis: 65%;
}
*/

/* Add to src/App.css */
/* ... (all existing styles) ... */

.thumb-gallery-group {
  /* flex-basis: 100%; /* Make it take full width if it's in its own row */
  /* Or adjust flex properties if it shares a row */
}

.thumbnail-container {
  display: flex; /* If you plan to show multiple thumbs side-by-side */
  gap: 10px;
  padding: 10px;
  border: 1px solid #4f5666;
  border-radius: 4px;
  background-color: #21252b; /* Slightly darker background for gallery */
  min-height: 140px; /* Ensure space even for default/loading */
  align-items: center; /* Center items vertically if they are different heights */
}

.character-thumbnail {
  width: 128px; /* Match your Python default_image size */
  height: 128px;
  object-fit: cover; /* Or 'contain' if you prefer */
  border: 1px solid #4f5666;
  border-radius: 4px;
  background-color: #353941; /* Fallback bg if image is transparent or fails to load */
}


/* In App.css */
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* High z-index */
}

.modal-content {
  background-color: #2c313a;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.5);
  max-width: 90vw;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.modal-content img {
  max-width: 100%;
  max-height: calc(90vh - 80px); /* Account for padding and button */
  object-fit: contain;
  margin-bottom: 15px;
}

.modal-close-button {
  padding: 8px 15px;
  background-color: #61dafb;
  color: #20232a;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
